{
  "name": "ssh-exec",
  "version": "0.3.2",
  "description": "Execute a script over ssh using Node.JS",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/ssh-exec.git"
  },
  "dependencies": {
    "ssh2": "~0.2.14",
    "stream-wrapper": "~0.1.2"
  },
  "readme": "# ssh-exec\n\nExecute a script over ssh using Node.JS and pipe to and from it\n\nIt is available through npm\n\n\tnpm install ssh-exec\n\nIt is written in plain Javascript and uses [ssh2](https://github.com/mscdex/ssh2) for all the heavy lifting.\n\n## Usage\n\n``` js\nvar exec = require('ssh-exec');\n\n// using ~/.ssh/id_rsa as the private key\n\nexec('ls -lh', 'ubuntu@my-remote.com').pipe(process.stdout);\n\n// or using the more settings\n\nexec('ls -lh', {\n\tuser: 'ubuntu',\n\thost: 'my-remote.com',\n\tkey: myKeyFileOrBuffer,\n\tpassword: 'my-user-password'\n}).pipe(process.stdout);\n\n// or if you want to pipe some data to the remote process\n\nprocess.stdin\n\t.pipe(exec('echo try typing something; cat -', 'ubuntu@my-remote.com')\n\t.pipe(process.stdout);\n\n// exec multiple commands using the same ssh connection\n\nvar c = exec.connection('ubuntu@my-remote.com');\nexec('ls -lh', c).pipe(process.stdout);\nexec('ls -lh', c).pipe(process.stdout);\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mafintosh/ssh-exec/issues"
  },
  "homepage": "https://github.com/mafintosh/ssh-exec",
  "_id": "ssh-exec@0.3.2",
  "dist": {
    "shasum": "61fa4adb1886b7e87aab98dbefd6c6c34992b897"
  },
  "_from": "ssh-exec@",
  "_resolved": "https://registry.npmjs.org/ssh-exec/-/ssh-exec-0.3.2.tgz"
}
